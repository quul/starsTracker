datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

model User {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now()) @map("create_at")
  updateAt      DateTime   @updatedAt @map("update_at")
  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  starsUpdateAt DateTime?
  stars         Stars[]
  starsLog      StarsLog[]

  @@map("users")
}

model Account {
  id                       Int     @id @default(autoincrement())
  userId                   Int     @map("user_id")
  type                     String
  provider                 String
  providerAccountId        String  @map("provider_account_id")
  refresh_token            String?
  access_token             String?
  refresh_token_expires_in Int?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  oauth_token_secret       String?
  oauth_token              String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique @map("session_token")
  userId       Int      @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Stars {
  id        Int      @id @default(autoincrement())
  createAt  DateTime
  updateAt  DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  repoId    Int
  isRemoved Boolean  @default(false) // No longer needed
  content   Json
}

model StarsLog {
  id      Int           @id @default(autoincrement())
  user    User          @relation(fields: [userId], references: [id])
  type    StarsOperates
  userId  Int
  repoId  Int
  content Json?
}

enum StarsOperates {
  ADD
  DELETE
}
